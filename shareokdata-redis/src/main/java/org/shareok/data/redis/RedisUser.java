/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.shareok.data.redis;

import java.util.Date;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author Tao Zhao
 */
public class RedisUser {
    private long userId;  // required, index stored in DB, generated by system    
    private int role;   // required, by default to be 1
    private String userName;  // by default to be user's email
    private String email;  // required
    private String password;  // required
    private String sessionKey; // ONLY for session management    
    private Date startTime;
    private boolean isActive; // by default to be active

    public String getUserName() {
        return userName;
    }

    public String getEmail() {
        return email;
    }

    public String getPassword() {
        return password;
    }

    public long getUserId() {
        return userId;
    }

    public int getRole() {
        return role;
    }

    public Date getStartTime() {
        return startTime;
    }

    public boolean isIsActive() {
        return isActive;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public void setUserId(long userId) {
        this.userId = userId;
    }

    public void setRole(int role) {
        this.role = role;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    public String getSessionKey() {
        return sessionKey;
    }

    public void setSessionKey(String sessionKey) {
        this.sessionKey = sessionKey;
    }
    
    @Override
    public RedisUser clone(){
        ApplicationContext context = new ClassPathXmlApplicationContext("redisContext.xml");
        RedisUser newUser = (RedisUser) context.getBean("user");
        
        newUser.setEmail(email);
        newUser.setPassword(password);
        
        // CANNOT clone a userId:
        // newUser.setUserId(userId);
        
        newUser.setIsActive(isActive);
        
        if(null != userName){
            newUser.setUserName(userName);
        }
        if(null != sessionKey){
            newUser.setSessionKey(sessionKey);
        }
        if(null != startTime){
            newUser.setStartTime(new Date());
        }
        newUser.setRole(role);
        return newUser;
    }
}
